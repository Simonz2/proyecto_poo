/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


package saboryartealcarbon;
import java.awt.Component;
import java.util.HashSet;
import java.util.Set;
import javax.swing.table.DefaultTableModel;
import javax.swing.JLabel;
import javax.swing.event.TableModelListener;
import javax.swing.event.TableModelEvent;
import javax.swing.DefaultListModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;



/**
 *
 * @author simon
 */
public class Facturar extends javax.swing.JFrame {
    boolean[] isEditable={false,false,true,false};//si las columnas de la tabla son editables o no
        DefaultTableModel table1;//crear la tabla
    int contador=1;//contador de las facturas del dia
    DefaultListModel listm;
    contarfacturas cf=new contarfacturas();
    imprimirframe printframe;
    /**
     * Creates new form Facturar
     */
    public Facturar() {
        initComponents();
        setTitle("Facturar");//titulo de la pantalla
        setResizable(false);//que no se pueda cambiar el tamaño
        
        creattable("data\\LINKS.txt");//metodo que añadelos valores a la jtable
        createlist();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        getback = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listafacturas = new javax.swing.JList<>();
        ContadorFacturalabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        savefbtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        Productos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        totaltxt = new javax.swing.JTextField();
        newfbtn = new javax.swing.JButton();
        loadfbtn = new javax.swing.JButton();
        closedbtn = new javax.swing.JButton();
        printf = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        getback.setText("Atras");
        getback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getbackActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(listafacturas);

        ContadorFacturalabel.setText("Venta #1");

        jLabel2.setText("Ventas");

        savefbtn.setText("Guardar factura");
        savefbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savefbtnActionPerformed(evt);
            }
        });

        Productos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "null", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Productos.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(Productos);

        jScrollPane3.setViewportView(jScrollPane1);

        jLabel1.setText("Total                                                      $");

        totaltxt.setEditable(false);

        newfbtn.setText("Nueva factura");
        newfbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newfbtnActionPerformed(evt);
            }
        });

        loadfbtn.setText("Cargar facturas");
        loadfbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadfbtnActionPerformed(evt);
            }
        });

        closedbtn.setText("Cerrar dia");
        closedbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closedbtnActionPerformed(evt);
            }
        });

        printf.setText("Imprimir factura");
        printf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printfActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ContadorFacturalabel, javax.swing.GroupLayout.PREFERRED_SIZE, 830, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 887, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(458, 458, 458)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(totaltxt))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(getback)
                        .addGap(18, 18, 18)
                        .addComponent(savefbtn)
                        .addGap(18, 18, 18)
                        .addComponent(newfbtn)
                        .addGap(18, 18, 18)
                        .addComponent(loadfbtn)
                        .addGap(18, 18, 18)
                        .addComponent(printf)
                        .addGap(18, 18, 18)
                        .addComponent(closedbtn)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(ContadorFacturalabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 638, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(totaltxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(getback)
                    .addComponent(savefbtn)
                    .addComponent(newfbtn)
                    .addComponent(loadfbtn)
                    .addComponent(printf)
                    .addComponent(closedbtn))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void getbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getbackActionPerformed
        // TODO add your handling code here:
        //Volver a la pantalla anterior
        Principal ventanaprincipal= new Principal();
        ventanaprincipal.setVisible(true);
        
        
        //cerrar esta pestaña
        this.dispose();
        
    }//GEN-LAST:event_getbackActionPerformed

    private void savefbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savefbtnActionPerformed
        // boton para guardar cada una de las facturas
        //se declaran las variables a utilizar
        
        guardar varg=new guardar(String.valueOf(contador));
        varg.savef(table1);
       
    }//GEN-LAST:event_savefbtnActionPerformed

    private void newfbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newfbtnActionPerformed
        // TODO add your handling code here:
        creattable("data\\LINKS.txt");//se lee la tabla de nuevo con los datos iniciales
        contador=listm.getSize()+1;//se suma 1 al contador para saber el numero de la factura
        ContadorFacturalabel.setText("Venta#"+contador);//se cambia el txt en el label
        listm.addElement("Venta#"+contador);//se añade un elemento a la jlist
        totaltxt.setText("");//se reinicia el total de la venta
    }//GEN-LAST:event_newfbtnActionPerformed

    private void loadfbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadfbtnActionPerformed
        // TODO add your handling code here:
        //se va a hacer metodo para leer todas las factura de donde se estan 
        //guardando, para empezar el contador desde ese punto 
        
        contador=cf.contador;
        listm.removeAllElements();
        for (int i=1; i<contador+1;i++){
            listm.addElement("Venta#"+i);
            
        }
        ContadorFacturalabel.setText("Venta#"+contador);
        guardar glist=new guardar(String.valueOf(contador));//se lee el path de la tabla con el numero de venta contador
        creattable(glist.path);//se lee la tabla con el numero de venta contador
        float totalt=0;
                String v="";
                for (int i=0;i<table1.getRowCount();i++){
                    if (v.equals(table1.getValueAt(i,3).toString())!=true){
                        float amount=Float.parseFloat(table1.getValueAt(i,3).toString());
                        totalt+=amount;  
                    }
                    
                }totaltxt.setText(String.valueOf(totalt));
    }//GEN-LAST:event_loadfbtnActionPerformed

    private void closedbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closedbtnActionPerformed
        // TODO add your handling code here:
        //verificar si en la lista existe el objeto "Ventatotal y eliminarlo
        if(listm.contains("Ventatotal")){
            int indexx=listm.indexOf("Ventatotal");
            listm.remove(indexx);
            //System.out.println("Ya se quito el elemento de la lista");
        }else{
            //System.out.println("El elemento no existia");
        }
        
        cf.cerrardia(table1.getRowCount());
        //System.out.println("Se corrio el cerrardia");
        listm.addElement("Ventatotal");
        creattable(cf.pathvt);
        //System.out.println("se creo la tabla");
        float totalt=0;
                String v="";
                for (int i=0;i<table1.getRowCount();i++){
                    if (v.equals(table1.getValueAt(i,3).toString())!=true){
                        float amount=Float.parseFloat(table1.getValueAt(i,3).toString());
                        totalt+=amount;  
                    }
                    
                }totaltxt.setText(String.valueOf(totalt));
         ContadorFacturalabel.setText("Venta Total");       
    }//GEN-LAST:event_closedbtnActionPerformed

    private void printfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printfActionPerformed
        // TODO add your handling code here:
        
        if (printframe!=null){
            printframe.dispose();
        }
        printframe= new imprimirframe(table1);
        printframe.setVisible(true);
        
    }//GEN-LAST:event_printfActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Facturar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Facturar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Facturar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Facturar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Facturar().setVisible(true);
            }
        });
    }
    
    private void creattable(String paths){
        leerdatos ld=new leerdatos("DATOS",paths);//se lee los datos
        table1=new DefaultTableModel(){//se le dan propiedades de que solo sea 
            //editable la tercera columna
            @Override
            public boolean isCellEditable(int row, int column) {
                return isEditable[column];
            }
        };
        
        
        table1.setColumnIdentifiers(ld.colnames());//darle el nombre a las columnas de la tabla
        
        Object[][] data=ld.productos();//datos de los productos para la tabla
        for(Object[]row:data){//se añade cada producto a la tabla
            table1.addRow(row);
        }
        
        
        Productos.setModel(table1);//se añade el modelo a la jtable
        //desactiva la reorganizacion de las columnas
        Productos.getTableHeader().setReorderingAllowed(false);
        //desactiva el poder cambiar tamaño a las columnas
        Productos.getTableHeader().setResizingAllowed(false);
        
        //funcion para añadir funcionalidad de escucha de la tabla
        table1.addTableModelListener(new TableModelListener(){
            @Override
            
            public void tableChanged(TableModelEvent e){
                table1.removeTableModelListener(this);
                try{
                    int price=Integer.parseInt(table1.getValueAt(e.getFirstRow(), 1).toString());//leer el precio del producto que la cantidad se cambio
                float quantity= Float.parseFloat(table1.getValueAt(e.getFirstRow(), 2).toString());//leer la cantidad entrada
                float total=price*quantity;//calcular el total 
                table1.setValueAt(String.valueOf(total), e.getFirstRow(), 3);//se muestra el valor total parcial del producto
                //se cuenta el valor total de la venta
                float totalt=0;
                String v="";
                for (int i=0;i<table1.getRowCount();i++){
                    if (v.equals(table1.getValueAt(i,3).toString())!=true){
                        float amount=Float.parseFloat(table1.getValueAt(i,3).toString());
                        totalt+=amount;  
                    }
                    
                }totaltxt.setText(String.valueOf(totalt));
                    
                }finally{
                    table1.addTableModelListener(this);
                }
        }
    });
    }
    
    private void createlist(){//metodo para añadir valores a la jlist 
        //y añadir funcionalidad como escuchar a seleccion de un 
        //elemento de la lista
        
        listm=new DefaultListModel();//modelo de la lista
        listm.addElement("Venta#1");//primer elemento de la jlist
        listafacturas.setModel(listm);//se da el modelo a la jlist
        
        //se añade el listener de seleccion de objetos en la lista
        listafacturas.addListSelectionListener(new ListSelectionListener(){
            @Override
            public void valueChanged(ListSelectionEvent e){
                
                if (e.getValueIsAdjusting()){//verificar si se selecciono algun elemento de la jlist
                    int selIndex=listafacturas.getSelectedIndex();//indice seleccionado
                    if(selIndex!=-1){//se haya seleccionado un elemento
                        //System.out.println(selIndex);
                        
                        contador=selIndex+1;//el contador se lleva al elemento seleccionado
                        if(listm.get(selIndex).equals("Ventatotal")){
                            
                            guardar glist=new guardar(String.valueOf("total"));//se lee el path de la tabla con el numero de venta contador
                            
                            creattable(glist.path);//se lee la tabla con el numero de venta contador
                            ContadorFacturalabel.setText("Venta Total");//se cambia el txt label
                            //se calcula el total de la factura
                            float totalt=0;
                            String v="";
                            for (int i=0;i<table1.getRowCount();i++){
                                if (v.equals(table1.getValueAt(i,3).toString())!=true){
                                float amount=Float.parseFloat(table1.getValueAt(i,3).toString());
                                totalt+=amount;  
                                }

                            }
                            totaltxt.setText(String.valueOf(totalt));//se añade el total de la factura
                        }else{
                            guardar glist=new guardar(String.valueOf(contador));//se lee el path de la tabla con el numero de venta contador
                            creattable(glist.path);//se lee la tabla con el numero de venta contador
                            ContadorFacturalabel.setText("Venta#"+contador);//se cambia el txt label
                            //se calcula el total de la factura
                            float totalt=0;
                            String v="";
                            for (int i=0;i<table1.getRowCount();i++){
                                if (v.equals(table1.getValueAt(i,3).toString())!=true){
                                float amount=Float.parseFloat(table1.getValueAt(i,3).toString());
                                totalt+=amount;  
                                }

                            }
                            totaltxt.setText(String.valueOf(totalt));//se añade el total de la factura
                        }
                        
                    }
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ContadorFacturalabel;
    private javax.swing.JTable Productos;
    private javax.swing.JButton closedbtn;
    private javax.swing.JButton getback;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> listafacturas;
    private javax.swing.JButton loadfbtn;
    private javax.swing.JButton newfbtn;
    private javax.swing.JButton printf;
    private javax.swing.JButton savefbtn;
    private javax.swing.JTextField totaltxt;
    // End of variables declaration//GEN-END:variables
}
